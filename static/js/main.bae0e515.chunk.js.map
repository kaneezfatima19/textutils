{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","prettyMode","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","style","cursor","role","htmlFor","TextForm","text","setText","useState","myStyle","setMyStyle","color","backgroundColor","heading","placeholder","value","onChange","event","target","rows","disabled","length","handleUpClick","newText","toUpperCase","handleLowCick","toLowerCase","handleSenClick","sentences","split","i","charAt","substring","join","handleSpeak","SpeechSynthesisUtterance","window","speechSynthesis","speak","handleAlert","handleRevCick","reverse","removeExtraSpaces","trimmedText","replace","trim","copyToClipboard","navigator","clipboard","writeText","handleClearCick","filter","word","Alert","height","alert","lower","slice","capitalize","msg","data-bs-dismiss","protoTypes","PropTypes","string","isRequired","App","setMode","setPreMode","setAlert","message","setTimeout","togglePreMode","document","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.bae0e515.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n    <nav\r\n    className={`navbar navbar-expand-lg ${props.prettyMode === 'pretty' ? 'navbar-pretty bg-light' : (props.mode === 'dark' ? 'navbar-dark bg-dark' : 'navbar-light bg-light')}`}>\r\n   \r\n    <div className=\"container-fluid\" >\r\n      {/*<Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>*/}\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            {/*<Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>*/}\r\n            <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n          </li> \r\n        </ul>\r\n        \r\n        <div className= {`form-check form-switch text-${props.prettyMode === 'pretty' ? 'black' : (props.mode === 'dark' ? 'white' : 'black')}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" style={{cursor:'pointer'}} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n        </div>\r\n\r\n        {/*<div className={`form-check form-switch text-${props.prettyMode === 'pretty' ? 'black' : (props.mode === 'dark' ? 'white' : 'black')} mx-3`}>\r\n        <input style={{cursor:'pointer'}} className=\"form-check-input\" onClick={props.togglePreMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Pretty Mode</label>\r\n  </div>*/}\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  </>\r\n  )\r\n}\r\n\r\nNavbar.protoTypes={\r\n   title: PropTypes.string.isRequired,\r\n   aboutText: PropTypes.string\r\n}\r\n\r\n \r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    const handleLowCick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const handleClearCick=()=>{\r\n        let newText=\"\";\r\n        setText(newText);\r\n    }\r\n    const handleRevCick=()=>{\r\n        let newText=text.split(\"\").reverse().join('');\r\n        setText(newText);\r\n    }\r\n    const handleSenClick = () => { \r\n        let sentences = text.split('. ');\r\n        for (let i = 0; i < sentences.length; i++) {\r\n            sentences[i] = sentences[i].charAt(0).toUpperCase() + sentences[i].substring(1).toLowerCase();\r\n        }\r\n        let newText = sentences.join('. ');\r\n        setText(newText);\r\n    }\r\n\r\n    const handleSpeak=()=> { \r\n        let newText=new SpeechSynthesisUtterance();\r\n        newText.text=text;\r\n        window.speechSynthesis.speak(newText);\r\n        props.handleAlert(\"Speak mode on\",\"success\")\r\n    }\r\n    {/*const downloadText = (text, filename) => {\r\n        const element = document.createElement('a');\r\n        const file = new Blob([text], {type: 'text/plain'});\r\n        \r\n        element.href = URL.createObjectURL(file);\r\n        element.download = filename;\r\n        \r\n        document.body.appendChild(element); // Required for this to work in FireFox\r\n        element.click();\r\n        \r\n        document.body.removeChild(element);\r\n    }*/}\r\n\r\n    const copyToClipboard = () => {\r\n        navigator.clipboard.writeText(text)/*.then(() => {\r\n          alert('Text copied to clipboard!');\r\n        }).catch(err => {\r\n          console.error('Failed to copy text: ', err);\r\n        });*/\r\n        props.handleAlert('Text copied to clipboard!','success')\r\n    };\r\n\r\n    const removeExtraSpaces = () => {\r\n        const trimmedText = text.replace(/\\s+/g, ' ').trim();\r\n        setText(trimmedText);\r\n    };\r\n    {/*\r\n    1. / and /: These delimit the start and end of the regex pattern.\r\n    2. \\s: This is a shorthand character class that matches any whitespace character. This includes spaces, tabs, and newline characters.\r\n    3. +: This is a quantifier that matches one or more occurrences of the preceding character or group (in this case, one or more whitespace characters).\r\n    4. g: This stands for \"global\" and means that the regex should be applied globally to the entire string, not just the first match.\r\n    */}\r\n    \r\n    //on change even is used to type something in the text box\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    const[myStyle,setMyStyle]=useState({\r\n        color:'black',\r\n        backgroundColor:'white'\r\n    })\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{ \r\n    color: props.prettyMode === 'pretty' ? 'black' : (props.mode === 'dark' ? 'white' : 'black') \r\n    }}>\r\n      <h1 style={{color: props.mode==='dark'?'white':'black'}}>{props.heading}</h1>\r\n      <div className='mb-3'>\r\n      <textarea className=\"form-control\" placeholder=\"Enter your text here\" value={text} onChange={handleOnChange} style={{\r\n      backgroundColor: props.prettyMode === 'pretty' ? '#baa0c1' : (props.mode === 'dark' ? 'black' : 'white'),\r\n      color: props.prettyMode === 'pretty' ? '#491357' : (props.mode === 'dark' ? 'white' : 'black')\r\n      }} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n\r\n    <button disabled={text.length===0} className=\"btn btn-dark dropdown-toggle\" style={{backgroundColor:props.prettyMode==='pretty'?'#8e539d':'black',color: props.prettyMode==='pretty'?'black':'white'}} type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n    Case</button>\r\n    <ul className=\"dropdown-menu\">\r\n    <li><button className=\"btn btn-dark dropdown-item\" onClick={handleUpClick} >UpperCase</button></li>\r\n    <li><button className=\"btn btn-dark dropdown-item \" onClick={handleLowCick}>LowerCase</button></li>\r\n    <li><button className=\"btn btn-dark dropdown-item\" onClick={handleSenClick}>SentenceCase</button></li>\r\n    </ul>\r\n    <button disabled={text.length===0} type=\"submit\" className=\"btn btn-dark mx-2\" style={{backgroundColor:props.prettyMode==='pretty'?'#8e539d':'black',color: props.prettyMode==='pretty'?'black':'white'}} onClick={handleSpeak}>Speak</button>\r\n    <button disabled={text.length===0} className=\"btn btn-dark mx-2 my-1\" style={{backgroundColor:props.prettyMode==='pretty'?'#8e539d':'black',color: props.prettyMode==='pretty'?'black':'white'}} onClick={handleRevCick}>Reverse</button>\r\n    <button disabled={text.length===0} className=\"btn btn-dark mx-2 my-1\" style={{backgroundColor:props.prettyMode==='pretty'?'#8e539d':'black',color: props.prettyMode==='pretty'?'black':'white'}} onClick={removeExtraSpaces}>Remove extra spaces</button>\r\n    <button disabled={text.length===0} className=\"btn btn-dark mx-2 my-1\" style={{backgroundColor:props.prettyMode==='pretty'?'#8e539d':'black',color: props.prettyMode==='pretty'?'black':'white'}} onClick={copyToClipboard }>Copy</button>\r\n    <button disabled={text.length===0} className=\"btn btn-dark mx-2 my-1\" style={{backgroundColor:props.prettyMode==='pretty'?'#8e539d':'black',color: props.prettyMode==='pretty'?'black':'white'}} onClick={handleClearCick}>Clear</button>\r\n    \r\n    <div className=\"container my-4\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h2>Your Text Summary</h2>\r\n        <p>{text.split(/\\s+/).filter((word) => {return word.length !== 0}).length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(/\\s+/).filter((word) => word.length > 0).length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n    </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n       const lower=word.toLowerCase();\r\n       return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height: '50px'}}>\r\n    {props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>}\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\r\n//import About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport React, {useState} from 'react';\r\nimport Alert from './components/Alert';\r\n//import {\r\n  //BrowserRouter,\r\n // Route,\r\n  //Routes\r\n//} from \"react-router-dom\";*/}\r\n\r\nfunction App() {\r\n  const[mode,setMode]=useState('light');\r\n  const[prettyMode,setPreMode]=useState(null);\r\n  const [alert,setAlert]=useState(null);\r\n\r\n  {/*const removeBodyClass=()=>{\r\n    document.body.classList.remove('pretty')\r\n    document.body.classList.remove('light')\r\n  }*/}\r\n\r\n  const handleAlert=(message,type)=>{\r\n    setAlert({\r\n      msg:message,\r\n      type:type})\r\n     \r\n    setTimeout(()=>{\r\n      setAlert(null)\r\n    },1500)  \r\n  }\r\n  const toggleMode=()=>{\r\n    \r\n    if(mode==='light'){\r\n      setMode('dark');\r\n      setPreMode(null);\r\n      document.body.style.backgroundColor='#1d1515';\r\n      handleAlert(\"dark mode has been enabled\",'success');\r\n    }\r\n    else{\r\n      setMode('light');\r\n      document.body.style.backgroundColor='white';\r\n      handleAlert(\"dark mode has been disabled\",'success');\r\n    }\r\n  } \r\n  const togglePreMode=()=>{\r\n    if(prettyMode===null){\r\n      setPreMode('pretty');\r\n      setMode('light'); \r\n      document.body.style.backgroundColor='#d28990';\r\n      handleAlert(\"Pretty mode has been enabled\",'success');\r\n    }\r\n    else{\r\n      setPreMode(null);\r\n      setMode('light')\r\n      document.body.style.backgroundColor='white';\r\n      handleAlert(\"Pretty mode has been disabled\",'success');\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    {/*<BrowserRouter>*/}\r\n  <Navbar title=\"Text-ToolKit\" /*aboutText=\"About\"*/ mode={mode} prettyMode={prettyMode} togglePreMode={togglePreMode} toggleMode={toggleMode}/>\r\n  <Alert alert={alert}/>\r\n  <div className=\"container my-3\">\r\n        \r\n        {/*}  < Routes>\r\n        <Route exact path='/about' element={<About />}>  \r\n        </Route>\r\n        <Route exact path=\"/\" element={ */}\r\n  <TextForm handleAlert={handleAlert} heading=\"Enter your text\" mode={mode} prettyMode={prettyMode} />\r\n        {/*}>\r\n        </Route>\r\n        </Routes>*/}\r\n        \r\n    </div>  \r\n    {/*</BrowserRouter>*/}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}