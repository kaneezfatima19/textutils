{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","prettyMode","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","htmlFor","togglePreMode","TextForm","text","setText","useState","myStyle","setMyStyle","color","backgroundColor","style","heading","placeholder","value","onChange","event","target","rows","handleUpClick","newText","toUpperCase","handleLowCick","toLowerCase","handleSenClick","sentences","split","i","length","charAt","substring","join","handleSpeak","SpeechSynthesisUtterance","window","speechSynthesis","speak","handleAlert","handleRevCick","reverse","downloadText","filename","element","document","file","Blob","URL","createObjectURL","download","body","appendChild","click","removeChild","handleClearCick","filter","word","Alert","alert","lower","slice","capitalize","msg","data-bs-dismiss","protoTypes","PropTypes","string","isRequired","App","setMode","setPreMode","setAlert","message","setTimeout","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d0d0d7c4.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n    <nav\r\n    className={`navbar navbar-expand-lg ${props.prettyMode === 'pretty' ? 'navbar-pretty bg-light' : (props.mode === 'dark' ? 'navbar-dark bg-dark' : 'navbar-light bg-light')}`}>\r\n   \r\n    <div className=\"container-fluid\" >\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n          </li> \r\n        </ul>\r\n        \r\n        <div className= {`form-check form-switch text-${props.prettyMode === 'pretty' ? 'black' : (props.mode === 'dark' ? 'white' : 'black')}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n        </div>\r\n\r\n        <div className={`form-check form-switch text-${props.prettyMode === 'pretty' ? 'black' : (props.mode === 'dark' ? 'white' : 'black')} mx-3`}>\r\n        <input className=\"form-check-input\" onClick={props.togglePreMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Pretty Mode</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  </>\r\n  )\r\n}\r\n\r\nNavbar.protoTypes={\r\n   title: PropTypes.string.isRequired,\r\n   aboutText: PropTypes.string\r\n}\r\n\r\n \r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    const handleLowCick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const handleClearCick=()=>{\r\n        let newText=\"\";\r\n        setText(newText);\r\n    }\r\n    const handleRevCick=()=>{\r\n        let newText=text.split(\"\").reverse().join('');\r\n        setText(newText);\r\n    }\r\n    const handleSenClick = () => { \r\n        let sentences = text.split('. ');\r\n        for (let i = 0; i < sentences.length; i++) {\r\n            sentences[i] = sentences[i].charAt(0).toUpperCase() + sentences[i].substring(1).toLowerCase();\r\n        }\r\n        let newText = sentences.join('. ');\r\n        setText(newText);\r\n    }\r\n\r\n    const handleSpeak=()=> { \r\n        let newText=new SpeechSynthesisUtterance();\r\n        newText.text=text;\r\n        window.speechSynthesis.speak(newText);\r\n        props.handleAlert(\"Speak mode on\",\"success\")\r\n    }\r\n    const downloadText = (text, filename) => {\r\n        const element = document.createElement('a');\r\n        const file = new Blob([text], {type: 'text/plain'});\r\n        \r\n        element.href = URL.createObjectURL(file);\r\n        element.download = filename;\r\n        \r\n        document.body.appendChild(element); // Required for this to work in FireFox\r\n        element.click();\r\n        \r\n        document.body.removeChild(element);\r\n    }\r\n    \r\n    //on change even is used to type something in the text box\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    const[myStyle,setMyStyle]=useState({\r\n        color:'black',\r\n        backgroundColor:'white'\r\n    })\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{ \r\n    color: props.prettyMode === 'pretty' ? 'black' : (props.mode === 'dark' ? 'white' : 'black') \r\n    }}>\r\n      <h1 style={{color: props.mode==='dark'?'white':'black'}}>{props.heading}</h1>\r\n      <div className='mb-3'>\r\n      <textarea className=\"form-control\" placeholder=\"Enter your text here\" value={text} onChange={handleOnChange} style={{\r\n      backgroundColor: props.prettyMode === 'pretty' ? '#baa0c1' : (props.mode === 'dark' ? 'black' : 'white'),\r\n      color: props.prettyMode === 'pretty' ? '#491357' : (props.mode === 'dark' ? 'white' : 'black')\r\n      }} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n\r\n    <button className=\"btn btn-dark dropdown-toggle\" style={{backgroundColor:props.prettyMode==='pretty'?'#8e539d':'black',color: props.prettyMode==='pretty'?'black':'white'}} type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n    Case</button>\r\n    <ul className=\"dropdown-menu\">\r\n    <li><button className=\"btn btn-dark dropdown-item\" onClick={handleUpClick} >UpperCase</button></li>\r\n    <li><button className=\"btn btn-dark dropdown-item \" onClick={handleLowCick}>LowerCase</button></li>\r\n    <li><button className=\"btn btn-dark dropdown-item\" onClick={handleSenClick}>SentenceCase</button></li>\r\n    </ul>\r\n    <button type=\"submit\" className=\"btn btn-dark mx-2\" style={{backgroundColor:props.prettyMode==='pretty'?'#8e539d':'black',color: props.prettyMode==='pretty'?'black':'white'}} onClick={handleSpeak}>Speak</button>\r\n    <button className=\"btn btn-dark mx-2\" style={{backgroundColor:props.prettyMode==='pretty'?'#8e539d':'black',color: props.prettyMode==='pretty'?'black':'white'}} onClick={handleRevCick}>Reverse</button>\r\n    <button className=\"btn btn-dark mx-2\" style={{backgroundColor:props.prettyMode==='pretty'?'#8e539d':'black',color: props.prettyMode==='pretty'?'black':'white'}} onClick={downloadText}>Download</button>\r\n    <button className=\"btn btn-dark mx-2\" style={{backgroundColor:props.prettyMode==='pretty'?'#8e539d':'black',color: props.prettyMode==='pretty'?'black':'white'}} onClick={handleClearCick}>Clear</button>\r\n\r\n    <div className=\"container my-4\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h2>Your Text Summary</h2>\r\n        <p>{text.split(/\\s+/).filter((word) => word.length > 0).length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(/\\s+/).filter((word) => word.length > 0).length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter your text in the above text box to preview it here\"}</p>\r\n    </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n       const lower=word.toLowerCase();\r\n       return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n//import {\n  //BrowserRouter,\n // Route,\n  //Routes\n//} from \"react-router-dom\";*/}\n\nfunction App() {\n  const[mode,setMode]=useState('light');\n  const[prettyMode,setPreMode]=useState(null);\n  const [alert,setAlert]=useState(null);\n\n  const handleAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type})\n     \n    setTimeout(()=>{\n      setAlert(null)\n    },1500)  \n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      setPreMode(null);\n      document.body.style.backgroundColor='#1d1515';\n      handleAlert(\"dark mode has been enabled\",'success');\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      handleAlert(\"dark mode has been disabled\",'success');\n    }\n  } \n  const togglePreMode=()=>{\n    if(prettyMode===null){\n      setPreMode('pretty');\n      setMode('light'); \n      document.body.style.backgroundColor='#d28990';\n      handleAlert(\"Pretty mode has been enabled\",'success');\n    }\n    else{\n      setPreMode(null);\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      handleAlert(\"Pretty mode has been disabled\",'success');\n    }\n  }\n  return (\n    <>\n    {/*<BrowserRouter>*/}\n  <Navbar title=\"Text-ToolKit\" /*aboutText=\"About\"*/ mode={mode} prettyMode={prettyMode} togglePreMode={togglePreMode} toggleMode={toggleMode}/>\n  <Alert alert={alert}/>\n  <div className=\"container my-3\">\n        \n        {/*}  < Routes>\n        <Route exact path='/about' element={<About />}>  \n        </Route>\n        <Route exact path=\"/\" element={ */}\n  <TextForm handleAlert={handleAlert} heading=\"Enter your text\" mode={mode} prettyMode={prettyMode} />\n        {/*}>\n        </Route>\n        </Routes>*/}\n        \n    </div>  \n    {/*</BrowserRouter>*/}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}